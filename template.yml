AWSTemplateFormatVersion: '2010-09-09'
Description: cfn-customresources
Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AmazonElasticTranscoder_FullAccess
      - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
      - arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess
      - arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess
  Handler:
    Type: AWS::Lambda::Function
    Properties:
      Handler: src/CustomResource.request
      Code: lambda
      Role: !GetAtt Role.Arn
      Runtime: nodejs6.10
      Timeout : 15
      Environment:
        Variables:
          DelayedFunctionCall: !Ref DelayedFunctionCall
  DelayedFunctionCall:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: |-
        {
          "StartAt": "wait",
          "States": {
            "wait": {
              "Type": "Wait",
              "Seconds": 60,
              "Next": "check"
            },
            "function": {
              "Type": "Task",
              "InputPath": "$.request",
              "Resource": "$.functionArn",
              "End": true
            }
          }
        }
      RoleArn: !GetAtt Role.Arn
Outputs:
  ServiceToken:
    Value: !GetAtt Handler.Arn